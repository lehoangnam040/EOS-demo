/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import database.QuestionDatabaseLoader;
import entity.Answer;
import entity.Question;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author Nam
 */
public class MainScreen extends javax.swing.JFrame implements ActionListener {
    
    ArrayList<Question> questions;
    ArrayList<JButton> btnQuestions = new ArrayList<>();

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
        QuestionDatabaseLoader loader = new QuestionDatabaseLoader();
        questions = loader.getAllQuestion();
        panelMain.setLayout(new CardLayout());
        for (int i = 0; i < questions.size(); i++) {
            JButton btn = new JButton("Question " + (i + 1));
            btnQuestions.add(btn);
            btn.addActionListener(this);
            panelQuestion.add(btn);
            if (i % 10 == 1) {
                panelQuestion.setPreferredSize(
                        new Dimension(1000, panelQuestion.getPreferredSize().height + btn.getPreferredSize().height + 5));
            }
            panelMain.add(new PanelQuestionContent(questions.get(i), btn), questions.get(i).getId());
        }
    }
    
    public int correctAnswers() {
        int totalCorrect = 0;
        for (int i = 0; i < panelMain.getComponentCount(); i++) {
            PanelQuestionContent panelQ = (PanelQuestionContent) panelMain.getComponent(i);
            Question question = questions.get(i);
            ArrayList<Answer> answers = question.getAnswers();
            boolean correct = true;
            if (question.isMultiple()) {
                for (int j = 0; j < answers.size(); j++) {
                    if (answers.get(j).isCorrect() != ((JCheckBox) panelQ.compOption.get(j)).isSelected()) {
                        correct = false;
                        break;
                    }
                }
            } else {
                for (int j = 0; j < answers.size(); j++) {
                    if (answers.get(j).isCorrect() != ((JRadioButton) panelQ.compOption.get(j)).isSelected()) {
                        correct = false;
                        break;
                    }
                }
            }
            totalCorrect += (correct == true ? 1 : 0);
        }
        return totalCorrect;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGeneral = new javax.swing.JPanel();
        btnSubmit = new javax.swing.JButton();
        scrollQuestion = new javax.swing.JScrollPane();
        panelQuestion = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelGeneral.setBackground(new java.awt.Color(51, 255, 0));

        javax.swing.GroupLayout panelGeneralLayout = new javax.swing.GroupLayout(panelGeneral);
        panelGeneral.setLayout(panelGeneralLayout);
        panelGeneralLayout.setHorizontalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelGeneralLayout.setVerticalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        panelMain.setBackground(new java.awt.Color(0, 204, 204));

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        scrollQuestion.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelQuestion.setBackground(new java.awt.Color(255, 153, 0));
        panelQuestion.setPreferredSize(new java.awt.Dimension(1000, 0));
        panelQuestion.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        scrollQuestion.setViewportView(panelQuestion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollQuestion)
                    .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Number of correct answer(s) is " + this.correctAnswers());
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JPanel panelGeneral;
    public final javax.swing.JPanel panelMain = new javax.swing.JPanel();
    private javax.swing.JPanel panelQuestion;
    private javax.swing.JScrollPane scrollQuestion;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < btnQuestions.size(); i++) {
            if (e.getSource() == btnQuestions.get(i)) {
                CardLayout layout = (CardLayout) panelMain.getLayout();
                layout.show(panelMain, questions.get(i).getId());
                break;
            }
        }
    }
}
